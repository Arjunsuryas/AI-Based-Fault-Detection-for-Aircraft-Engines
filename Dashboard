import React, { useState } from 'react';
import { EngineData, Fault } from '../types/engine';
import { EngineCard } from './EngineCard';
import { EngineDetails } from './EngineDetails';
import { AlertTriangle, CheckCircle, Activity, Clock } from 'lucide-react';

interface DashboardProps {
  engines: EngineData[];
  faults: Fault[];
}

export const Dashboard: React.FC<DashboardProps> = ({ engines, faults }) => {
  const [selectedEngine, setSelectedEngine] = useState<EngineData | null>(null);
  const [selectedFault, setSelectedFault] = useState<Fault | null>(null);

  const handleEngineClick = (engine: EngineData) => {
    setSelectedEngine(engine);
    const fault = faults.find(f => f.engineId === engine.id);
    setSelectedFault(fault || null);
  };

  const handleCloseDetails = () => {
    setSelectedEngine(null);
    setSelectedFault(null);
  };

  const healthyEngines = engines.filter(e => e.status === 'healthy').length;
  const warningEngines = engines.filter(e => e.status === 'warning').length;
  const criticalEngines = engines.filter(e => e.status === 'critical').length;
  const averageHealth = engines.reduce((sum, e) => sum + e.healthScore, 0) / engines.length;

  return (
    <div className="min-h-screen bg-gray-900 p-6">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-white mb-2">
            Aircraft Engine Monitoring System
          </h1>
          <p className="text-gray-400">
            AI-powered fault detection and predictive maintenance
          </p>
        </div>

        {/* Status Overview */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-gray-800 rounded-lg p-6 border-l-4 border-green-400">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-gray-400 text-sm">Healthy Engines</p>
                <p className="text-2xl font-bold text-white">{healthyEngines}</p>
};
